# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.

require 'inifile'
require 'yaml'



env_vars = [
    'EMAILPROCESSOR_BING_TO_S3_PREFIX',
    'EMAILPROCESSOR_BING_TO_S3_BUCKET',
    'EMAILPROCESSOR_USERNAME',
    'EMAILPROCESSOR_PORT',
    'EMAILPROCESSOR_ADDRESS',
    'SNS_NAME',
    'SNS_DEFAULT_MAIL',
    'AWS_EIP',
    'AWS_ACCESS_KEY_ID',
    'AWS_SECRET_ACCESS_KEY',
    'AWS_DEFAULT_REGION'
]


vagrant_config = YAML.load_file('.config.yaml')
keypair = vagrant_config['aws']['keypair']
subnet_id = vagrant_config['aws']['subnet_id']
region = vagrant_config['aws']['region']
role = vagrant_config['aws']['role']
aws_access_key_id = vagrant_config['aws']['access_key_id']
aws_secret_access_key = vagrant_config['aws']['secret_access_key']


Vagrant.configure(2) do |config|
#  config.vm.box = "phusion/ubuntu-14.04-amd64"
#  config.vm.hostname = 'email-processor.it.local'
#  config.vm.network "forwarded_port", guest: ENV['EMAILPROCESSOR_PORT'], host: ENV['EMAILPROCESSOR_PORT']



  config.vm.box = "aws-dummy"

  config.vm.provider :aws do |aws, override|
    aws.access_key_id = (
        aws_access_key_id or
        ENV['AWS_ACCESS_KEY_ID']  )
    aws.secret_access_key = (
        aws_secret_access_key or 
        ENV['AWS_SECRET_ACCESS_KEY'] )

#    aws.instance_type = 't2.micro'
    aws.instance_type = 't2.small'
#    aws.iam_instance_profile_name = role
    aws.region = region
    aws.keypair_name = keypair
    aws.associate_public_ip = true
    aws.subnet_id = subnet_id
    # We attach the username to the instance to avoid conflicts between 
    # developers sharing the same AWS account
    aws.tags = {
          'Name' => 'vagrant-emailprocessor-' + ENV['USER']
        }

    # The archlinux AMI released on August 2015. This AMI is public.
    aws.ami = "ami-b97953ce"

    override.ssh.username = "ubuntu"
    override.ssh.private_key_path = File.join(File.expand_path('~'), ".ssh", "id_rsa")
  end


  # Transfer env variables to the box
  env_vars.each do |varname|
      config.vm.provision varname, type: "shell" do |s|
          s.inline = "grep -isq %s /etc/app-env.sh || echo 'export %s=%s' >> /etc/app-env.sh" %
              [varname, varname, ENV[varname]]
      end
  end

  config.vm.provision "shell", inline: "which puppet || wget --no-verbose https://apt.puppetlabs.com/puppetlabs-release-trusty.deb"
  config.vm.provision "shell", inline: "which puppet || ( dpkg -i puppetlabs-release-trusty.deb; apt-get -q update; apt-get -y install puppet ) "
  config.vm.provision "puppet" do |puppet|
    puppet.manifests_path = "puppet/manifests"
    puppet.manifest_file = "default.pp"
    puppet.module_path = "puppet/modules"

    puppet.facter = {
      "vagrant" => "1"
    }
  end
  
  # show information required
  config.vm.provision "shell", inline: '. /etc/app-env.sh; echo -e "DEPLOYMENT INFO: ARN created for notifications: $(cat /etc/app-sns)\nDEPLOYMENT INFO: Public endpoint for SMTP: $(facter ec2_public_ipv4):${EMAILPROCESSOR_PORT}" '

end
